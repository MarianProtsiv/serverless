{"ast":null,"code":"import _initializerDefineProperty from \"/Users/macbook/serverless/sls-course-frontend/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/macbook/serverless/sls-course-frontend/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/macbook/serverless/sls-course-frontend/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _temp;\n\nimport { observable, action } from 'mobx';\nlet AuthStore = (_class = (_temp = class AuthStore {\n  constructor() {\n    _initializerDefineProperty(this, \"token\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"claims\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"email\", _descriptor3, this);\n  }\n\n  setToken(token) {\n    this.token = token;\n    console.log('Token set', token);\n  }\n\n  setClaims(claims) {\n    this.claims = claims;\n    this.email = claims.email;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"token\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"claims\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"email\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"setToken\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setToken\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setClaims\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setClaims\"), _class.prototype)), _class);\nexport default new AuthStore();","map":{"version":3,"sources":["/Users/macbook/serverless/sls-course-frontend/src/stores/AuthStore.js"],"names":["observable","action","AuthStore","setToken","token","console","log","setClaims","claims","email"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAMdC,EAAAA,QADA,CACSC,KADT,EACgB;AACd,SAAKA,KAAL,GAAaA,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACD;;AAGDG,EAAAA,SADA,CACUC,MADV,EACkB;AAChB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaD,MAAM,CAACC,KAApB;AACD;;AAfa,C,+EACbT,U;;;;;WAAmB,I;;0EACnBA,U;;;;;yEACAA,U;;;;;6DAEAC,M,+IAMAA,M;AAOH,eAAe,IAAIC,SAAJ,EAAf","sourcesContent":["import { observable, action } from 'mobx';\n\nclass AuthStore {\n  @observable token = null;\n  @observable claims;\n  @observable email;\n\n  @action\n  setToken(token) {\n    this.token = token;\n    console.log('Token set', token);\n  }\n\n  @action\n  setClaims(claims) {\n    this.claims = claims;\n    this.email = claims.email;\n  }\n}\n\nexport default new AuthStore();"]},"metadata":{},"sourceType":"module"}