{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/serverless/sls-course-frontend/src/pages/AuctionsPage.js\";\nimport React, { useEffect } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Auction from \"../components/Auction\";\nimport BidModal from \"../components/BidModal\";\nimport { Fab, makeStyles } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nconst containerWidth = 1000;\nconst cardPadding = 14;\nconst cardWidth = containerWidth / 2 - cardPadding * 2;\nconst useStyles = makeStyles({\n  auctionsContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: containerWidth,\n    margin: 'auto',\n    '@media (max-width: 900px)': {\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  },\n  auctionCard: {\n    flexBasis: cardWidth,\n    flexShrink: 0,\n    padding: cardPadding\n  },\n  fabContainer: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20\n  },\n  createAuctionButton: {\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)'\n  }\n});\n\nconst AuctionsPage = props => {\n  const {\n    auctionStore,\n    authStore,\n    routerHistory\n  } = props;\n  const classes = useStyles();\n  useEffect(() => {\n    (async () => {\n      await auctionStore.fetchAuctions();\n      setInterval(() => {\n        if (routerHistory.location.pathname === '/auctions' || routerHistory.location.pathname === '/') {\n          auctionStore.fetchAuctions();\n        }\n      }, process.env.REACT_APP_REFRESH_RATE * 1000);\n    })();\n  }, [auctionStore, routerHistory]);\n\n  const renderAuctions = () => {\n    const {\n      auctions\n    } = auctionStore;\n\n    if (!auctions.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"No auctions available. Create one?\"));\n    }\n\n    return auctions.map(auction => {\n      let bidState = 'CAN_BID';\n\n      if (auction.seller === authStore.email) {\n        bidState = 'OWN_AUCTION';\n      }\n\n      if (auction.highestBid.bidder === authStore.email) {\n        bidState = 'HIGHEST_BIDDER';\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: auction.id,\n        className: classes.auctionCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Auction, {\n        auction: auction,\n        bidState: bidState,\n        onBid: () => auctionStore.setBiddingOn(auction),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.auctionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BidModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), renderAuctions(), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.createAuctionButton,\n    onClick: () => routerHistory.push('/create'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default inject(\"auctionStore\", \"authStore\", \"routerHistory\")(observer(AuctionsPage));","map":{"version":3,"sources":["/Users/macbook/serverless/sls-course-frontend/src/pages/AuctionsPage.js"],"names":["React","useEffect","inject","observer","Auction","BidModal","Fab","makeStyles","AddIcon","containerWidth","cardPadding","cardWidth","useStyles","auctionsContainer","display","flexWrap","maxWidth","margin","alignItems","justifyContent","auctionCard","flexBasis","flexShrink","padding","fabContainer","position","bottom","right","createAuctionButton","background","AuctionsPage","props","auctionStore","authStore","routerHistory","classes","fetchAuctions","setInterval","location","pathname","process","env","REACT_APP_REFRESH_RATE","renderAuctions","auctions","length","textAlign","width","map","auction","bidState","seller","email","highestBid","bidder","id","setBiddingOn","push"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport Auction from \"../components/Auction\";\nimport BidModal from \"../components/BidModal\";\nimport { Fab, makeStyles } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst containerWidth = 1000;\nconst cardPadding = 14;\nconst cardWidth = (containerWidth / 2) - (cardPadding * 2); \n\nconst useStyles = makeStyles({\n  auctionsContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: containerWidth,\n    margin: 'auto',\n    '@media (max-width: 900px)' : {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n  },\n  auctionCard: {\n    flexBasis: cardWidth,\n    flexShrink: 0,\n    padding: cardPadding,\n  },\n  fabContainer: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n  },\n  createAuctionButton: {\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)',\n  },\n});\n\nconst AuctionsPage = (props) => {\n  const { auctionStore, authStore, routerHistory } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    (async () => {\n      await auctionStore.fetchAuctions();\n      setInterval(() => {\n        if (routerHistory.location.pathname === '/auctions' || routerHistory.location.pathname === '/') {\n          auctionStore.fetchAuctions();\n        }\n      }, process.env.REACT_APP_REFRESH_RATE * 1000);\n    })();\n  }, [auctionStore, routerHistory]);\n\n  const renderAuctions = () => {\n    const { auctions } = auctionStore;\n\n    if (!auctions.length) {\n      return (\n        <div style={{ textAlign: 'center', width: '100%' }}>\n          <h4>No auctions available. Create one?</h4>\n        </div>\n      );\n    }\n\n    return auctions.map((auction) => {\n      let bidState = 'CAN_BID';\n\n      if (auction.seller === authStore.email) {\n        bidState = 'OWN_AUCTION';\n      }\n\n      if (auction.highestBid.bidder === authStore.email) {\n        bidState = 'HIGHEST_BIDDER';\n      }\n\n      return (\n        <div key={auction.id} className={classes.auctionCard}>\n          <Auction\n            auction={auction}\n            bidState={bidState}\n            onBid={() => auctionStore.setBiddingOn(auction)}\n          />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={classes.auctionsContainer}>\n      <BidModal />\n\n      {renderAuctions()}\n      \n      <div className={classes.fabContainer}>\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.createAuctionButton}\n          onClick={() => routerHistory.push('/create')}\n        >\n          <AddIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n};\n\nexport default inject(\"auctionStore\", \"authStore\", \"routerHistory\")(observer(AuctionsPage));\n"]},"metadata":{},"sourceType":"module"}