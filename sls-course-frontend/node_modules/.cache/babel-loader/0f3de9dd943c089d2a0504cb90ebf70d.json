{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/serverless/sls-course-frontend/src/components/Auction.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Countdown from \"react-countdown\";\nimport { Grid, CardHeader, Avatar } from '@material-ui/core';\nimport styled from 'styled-components';\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  media: {\n    height: 280\n  },\n  bidButton: {\n    width: '70%',\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)',\n    borderWidth: 0,\n    color: 'white'\n  },\n  cardActions: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    padding: 12\n  },\n  detailsContainer: {\n    display: 'flex',\n    padding: 0\n  },\n  details: {\n    display: 'flex',\n    flexBasis: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 18,\n    paddingBottom: 10,\n    textAlign: 'center'\n  }\n});\nconst Label = styled.p`\n  font-size: 12px;\n  font-weight: bold;\n  color: #919191;\n`;\nconst Value = styled.span`\n  font-size: 14px;\n`;\n\nconst Auction = ({\n  auction,\n  onBid,\n  bidState\n}) => {\n  const classes = useStyles();\n  const amount = auction.highestBid.amount;\n  const pictureUrl = auction.pictureUrl ? auction.pictureUrl : 'placeholder.png';\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, auction.seller[0].toUpperCase()),\n    title: auction.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: pictureUrl,\n    title: \"Contemplative Reptile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.detailsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, amount === 0 ? 'No bids' : `$${amount}`), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"HIGHEST BID\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Countdown, {\n    date: auction.endingAt,\n    renderer: ({\n      hours,\n      minutes,\n      seconds\n    }) => /*#__PURE__*/React.createElement(Value, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, hours, \" hours \", minutes, \" mins \", seconds, \" secs\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, \"TIME REMAINING\"))))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, (bidState === 'OWN_AUCTION' || bidState === 'HIGHEST_BIDDER') && /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    onClick: () => onBid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, bidState === 'OWN_AUCTION' ? 'This is your auction' : 'You are the highest bidder'), bidState === 'CAN_BID' && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.bidButton,\n    onClick: () => onBid(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Bid now!\"))));\n};\n\nexport default Auction;","map":{"version":3,"sources":["/Users/macbook/serverless/sls-course-frontend/src/components/Auction.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Countdown","Grid","CardHeader","Avatar","styled","useStyles","root","width","media","height","bidButton","background","borderWidth","color","cardActions","display","justifyContent","padding","detailsContainer","details","flexBasis","alignItems","paddingTop","paddingBottom","textAlign","Label","p","Value","span","Auction","auction","onBid","bidState","classes","amount","highestBid","pictureUrl","avatar","seller","toUpperCase","title","endingAt","hours","minutes","seconds"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Countdown from \"react-countdown\";\nimport { Grid, CardHeader, Avatar } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  media: {\n    height: 280,\n  },\n  bidButton: {\n    width: '70%',\n    background: 'linear-gradient(90deg, rgba(190,52,32,1) 0%, rgba(231,75,77,1) 48%, rgba(231,148,74,1) 100%)',\n    borderWidth: 0,\n    color: 'white',\n  },\n  cardActions: {\n   width: '100%',\n   display: 'flex',\n   justifyContent: 'center',\n   padding: 12,\n  },\n  detailsContainer: {\n    display: 'flex',\n    padding: 0,\n  },\n  details: {\n    display: 'flex',\n    flexBasis: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 18,\n    paddingBottom: 10,\n    textAlign: 'center',\n  },\n});\n\nconst Label = styled.p`\n  font-size: 12px;\n  font-weight: bold;\n  color: #919191;\n`;\n\nconst Value = styled.span`\n  font-size: 14px;\n`;\n\nconst Auction = ({ auction, onBid, bidState }) => {\n  const classes = useStyles();\n  const amount = auction.highestBid.amount;\n\n  const pictureUrl = auction.pictureUrl ? auction.pictureUrl : 'placeholder.png';\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              {auction.seller[0].toUpperCase()}\n            </Avatar>\n          }\n          title={auction.title}\n        />\n        <CardMedia\n          className={classes.media}\n          image={pictureUrl}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent className={classes.detailsContainer}>\n          <div className={classes.details}>\n              <div>\n                <Value>{amount === 0 ? 'No bids' : `$${amount}`}</Value>\n                <Label>HIGHEST BID</Label>\n              </div>\n          </div>\n          <div className={classes.details}>\n            <div>\n              <Countdown\n                date={auction.endingAt}\n                renderer={({ hours, minutes, seconds }) => (\n                  <Value>\n                    {hours} hours {minutes} mins {seconds} secs\n                  </Value>\n                )}\n              />\n              <Label>TIME REMAINING</Label>\n            </div>\n          </div>\n          {/* <Grid container spacing={3} style={{ width: '100%', margin: 'auto' }}>\n            <Grid item xs={4} style={{ textAlign: 'center' }}>\n              <Value>{amount === 0 ? 'No bids' : `$${amount}`}</Value>\n              <Label>HIGHEST BID</Label>\n            </Grid>\n            <Grid item xs={8} style={{ textAlign: 'center' }}>\n              <p>\n                <Countdown\n                  date={auction.endingAt}\n                  renderer={({ hours, minutes, seconds }) => (\n                    <Value>\n                     {hours} hours {minutes} mins {seconds} secs\n                    </Value>\n                  )}\n                />\n              </p>\n              <Label>TIME REMAINING</Label>\n            </Grid>\n          </Grid> */}\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <div className={classes.cardActions}>\n          { (bidState === 'OWN_AUCTION' || bidState === 'HIGHEST_BIDDER') && (\n            <Button\n              disabled={true}\n              onClick={() => onBid()}\n            >\n              {bidState === 'OWN_AUCTION' ? 'This is your auction' : 'You are the highest bidder'}\n            </Button>\n          )}\n\n          { bidState === 'CAN_BID' && (\n            <Button\n              variant=\"outlined\"\n              className={classes.bidButton}\n              onClick={() => onBid()}\n            >\n              Bid now!\n            </Button>\n          )}\n\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Auction;\n"]},"metadata":{},"sourceType":"module"}